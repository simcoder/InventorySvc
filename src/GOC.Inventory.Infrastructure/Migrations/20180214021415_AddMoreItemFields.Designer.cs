// <auto-generated />
using GOC.Inventory.Domain.Enums;
using GOC.Inventory.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GOC.Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180214021415_AddMoreItemFields")]
    partial class AddMoreItemFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.CompanyAggregate.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedByUserId");

                    b.Property<DateTime>("CreatedDateUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.InventoryAggregate.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyId");

                    b.Property<int>("CreatedByUserId");

                    b.Property<DateTime>("CreatedDateUtc");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.InventoryAggregate.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyId");

                    b.Property<int>("CreatedByUserId");

                    b.Property<DateTime>("CreatedDateUtc");

                    b.Property<string>("Description");

                    b.Property<Guid?>("InventoryId");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid?>("SoldToCompanyId");

                    b.Property<Guid>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.VendorAggregate.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatedByUserId");

                    b.Property<DateTime>("CreatedDateUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.CompanyAggregate.Company", b =>
                {
                    b.OwnsOne("GOC.Inventory.Domain.AggregatesModels.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("CompanyId");

                            b1.Property<string>("AddressLine1");

                            b1.Property<string>("AddressLine2");

                            b1.Property<string>("City");

                            b1.Property<string>("State");

                            b1.Property<string>("ZipCode");

                            b1.ToTable("Companies");

                            b1.HasOne("GOC.Inventory.Domain.AggregatesModels.CompanyAggregate.Company")
                                .WithOne("Address")
                                .HasForeignKey("GOC.Inventory.Domain.AggregatesModels.ValueObjects.Address", "CompanyId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.InventoryAggregate.Item", b =>
                {
                    b.HasOne("GOC.Inventory.Domain.AggregatesModels.InventoryAggregate.Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId");

                    b.OwnsOne("GOC.Inventory.Domain.AggregatesModels.ValueObjects.MobilePhone", "MobilePhone", b1 =>
                        {
                            b1.Property<Guid>("ItemId");

                            b1.Property<string>("Carrier");

                            b1.Property<string>("Color");

                            b1.Property<int>("Condition");

                            b1.Property<string>("Imei");

                            b1.Property<string>("Manufacturer");

                            b1.Property<string>("StorageSize");

                            b1.ToTable("Items");

                            b1.HasOne("GOC.Inventory.Domain.AggregatesModels.InventoryAggregate.Item")
                                .WithOne("MobilePhone")
                                .HasForeignKey("GOC.Inventory.Domain.AggregatesModels.ValueObjects.MobilePhone", "ItemId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("GOC.Inventory.Domain.AggregatesModels.VendorAggregate.Vendor", b =>
                {
                    b.OwnsOne("GOC.Inventory.Domain.AggregatesModels.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid?>("VendorId");

                            b1.Property<string>("AddressLine1");

                            b1.Property<string>("AddressLine2");

                            b1.Property<string>("City");

                            b1.Property<string>("State");

                            b1.Property<string>("ZipCode");

                            b1.ToTable("Vendors");

                            b1.HasOne("GOC.Inventory.Domain.AggregatesModels.VendorAggregate.Vendor")
                                .WithOne("Address")
                                .HasForeignKey("GOC.Inventory.Domain.AggregatesModels.ValueObjects.Address", "VendorId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
